package gui;

import bean.account.Account;
import bean.user.User;
import controller.AccountOverviewController;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class GUIAllAccounts {
    JPanel panel, accountsPanel;
    CardLayout cards;
    User user;
    AccountOverviewController accountOverviewController;
    GUIHomePage home;


    public GUIAllAccounts(User u, GUIHomePage home) {
        this.home = home;
        panel = new JPanel();
        cards = new CardLayout();
        panel.setLayout(cards);
        this.user = u;
        this.accountOverviewController = new AccountOverviewController(u.getUid(), u.getUsername());
        update();
    }

    public void update() {
        panel.removeAll();
        List<Account> accounts = accountOverviewController.getAccountList();

        accountsPanel = new JPanel();
        accountsPanel.setLayout(new GridLayout(accounts.size(), 1));

        for (Account a : accounts) {
            JButton aBtn = new JButton(a.toString());
            accountsPanel.add(aBtn);

            GUIAccount acc = new GUIAccount(a);
            panel.add(acc.getPanel(), a.getAid());

            acc.getGoBackButton().addActionListener(e -> cards.show(panel, "AllAccounts"));

            acc.getDeleteAccountButton().addActionListener(e -> {
                // only delete account when balance == 0
                if (a.getBalance() != 0) {
                    JOptionPane.showMessageDialog(null, "Cannot delete account with nonzero balance.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    accountOverviewController.deleteAccount(a.getAid());
                    accountsPanel.remove(aBtn);
                    cards.show(panel, "AllAccounts");
                    home.update();
                }
            });

            aBtn.addActionListener(e -> cards.show(panel, String.valueOf(a.getAid())));
        }

        panel.add(accountsPanel, "AccountPanel");
        cards.show(panel, "AccountPanel");
    }

    public JPanel getPanel() {
        return panel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }
}
