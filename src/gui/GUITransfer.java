package gui;

import bean.account.Account;
import bean.account.CheckingAccount;
import bean.account.SavingAccount;
import bean.account.SecurityAccount;
import bean.user.User;
import controller.CheckingAccountController;
import controller.SavingAccountController;
import controller.SecurityAccountController;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class GUITransfer extends JFrame {

    private JButton transferButton;
    private JTextField accIDInput;
    private JTextField amountInput;
    private JButton goBackButton;
    private JPanel transferPanel;
    private Account account;

    public GUITransfer(Account a) {
        setContentPane(transferPanel);
        this.account = a;
    }

    public boolean validTransferAmount() {
        String amt = amountInput.getText();
        String strToAid = accIDInput.getText();
        if (amt == "") {
            JOptionPane.showMessageDialog(null,
                    "Missing Transfer amount",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (strToAid == "") {
                JOptionPane.showMessageDialog(null,
                        "Missing account id to transfer to",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                int toAid = Integer.parseInt(strToAid);
                double tranAmount = Double.parseDouble(amountInput.getText());
                if (tranAmount <= 0) {
                    JOptionPane.showMessageDialog(null,
                            "Please enter transfer amount greater than 0",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
                if (account.getType() == Account.AccountType.SAVING) {
                    SavingAccountController savController = new SavingAccountController((SavingAccount) account);
                    if (!savController.transfer(toAid, tranAmount)) {
                        JOptionPane.showMessageDialog(null,
                                "Transfer not success.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (account.getType() == Account.AccountType.CHECKING) {
                    CheckingAccountController ckController = new CheckingAccountController((CheckingAccount) account);
                    if (!ckController.transfer(toAid, tranAmount)) {
                        JOptionPane.showMessageDialog(null,
                                "Transfer not success.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else if (account.getType() == Account.AccountType.SECURITY) {
                    SecurityAccountController secController = new SecurityAccountController((SecurityAccount) account);
                    if (!secController.transfer(toAid, tranAmount)) {
                        JOptionPane.showMessageDialog(null,
                                "Transfer not success.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "cannot transfer money from loan account", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        return true;
    }

    public JButton getGoBackButton() {
        return goBackButton;
    }

    public JButton getTransferButton() {
        return transferButton;
    }

    public JPanel getTransferPanel() {
        return this.transferPanel;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        transferPanel = new JPanel();
        transferPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        transferPanel.setBorder(BorderFactory.createTitledBorder(null, "Transfer", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("Please enter the id of account to transfer to:  ");
        transferPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        accIDInput = new JTextField();
        transferPanel.add(accIDInput, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        goBackButton = new JButton();
        goBackButton.setText("Go back");
        transferPanel.add(goBackButton, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        transferButton = new JButton();
        transferButton.setText("Transfer");
        transferPanel.add(transferButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Please enter the amount of money to transfer to: ");
        transferPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        amountInput = new JTextField();
        transferPanel.add(amountInput, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return transferPanel;
    }

}
